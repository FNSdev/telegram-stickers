name: deploy_stage_on_push

on:
  push:
    tags:
      - 0.*
jobs:
  build_and_publish:
    runs-on: [ubuntu-latest]
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
    steps:
      - name: login_to_docker
        run:  echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_LOGIN} --password-stdin
      - name: checkout
        uses: actions/checkout@v2
      - name: set_release_version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
      - name: echo_release_version
        run: echo $RELEASE_VERSION
      - name: build_image
        run: docker build --build-arg ENCRYPT_KEY=${ENCRYPT_KEY} -t $DOCKER_LOGIN/$IMAGE_NAME:$RELEASE_VERSION -f deploy/stage/Dockerfile .
      - name: push_image_to_docker.io
        run: docker push $DOCKER_LOGIN/$IMAGE_NAME:$RELEASE_VERSION
  deploy:
    needs: [build_and_publish]
    runs-on: [ubuntu-latest]
    env:
      K8S_URL: ${{ secrets.K8S_URL }}
      K8S_TOKEN: ${{ secrets.K8S_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: set_release_version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
      - name: create_secrets_file
        run: echo '${{ secrets.K8S_ENVIRONMENT_SECRETS }}' >> env-secrets.yaml
      - name: update_env_secrets
        run: bash deploy/stage/update_env_secrets.sh
      - name: update_telegram_stickers_deployment
        run: bash deploy/stage/update_telegram_stickers_deployment.sh
